//------------------------------------------------------
// @brief	ｽﾃｰｼﾞの管理
// 2020 6/18 Ryosuke Iida
//------------------------------------------------------

#include "Stage.h"
#include "StageManager.h"

//------------------------------------------------------
// @brief	ｺﾝｽﾄﾗｸﾀ
//------------------------------------------------------
StageManager::StageManager(const STAGE_TYPE& sT)
{
	// ｵﾌﾞｼﾞｪｸﾄを構築
	stage = std::make_unique<Stage>(sT);
}

//------------------------------------------------------
// @brief	ﾃﾞｽﾄﾗｸﾀ
//------------------------------------------------------
StageManager::~StageManager()
{
	
}

//------------------------------------------------------
// @brief	初期化
//------------------------------------------------------
void StageManager::Initialize()
{
	// 各初期化処理
	stage->Initialize();
}

//------------------------------------------------------
// @brief	初期化
//------------------------------------------------------
void StageManager::Finalize()
{
	// 各終了処理
	stage->Finalize();

	// ﾘｿｰｽの解放
	stage.reset();
}

//------------------------------------------------------
// @brief	初期化
//------------------------------------------------------
void StageManager::Update()
{
	// 各更新処理
	stage->Update();
}

//------------------------------------------------------
// @brief	初期化
//------------------------------------------------------
void StageManager::Render()
{
	// 各描画処理
	stage->Render();
}

//------------------------------------------------------
// @brief	初期化
//------------------------------------------------------
Stage* StageManager::GetStage()
{
	return stage.get();
}

//------------------------------------------------------
// @brief	ﾀｲﾌﾟの取得(どのﾀｲﾌﾟか確かめる)
//------------------------------------------------------
bool StageManager::GetManagerType(MANAGER_TYPE type)
{
	return (type == MANAGER_TYPE::TERRAIN_MANAGER);
}
