◆当たり判定グループでの管理
プレイヤーグループとエネミーグループ
プレイヤーグループと障害物グループ
プレイヤーグループと地形(ポリゴンによるもの先に判定を行う距離に入ったものだけ)

◇プレイヤーやエネミーの移動
キー入力を受け取りプレイヤーの移動先を決める
当たり判定を行い移動できるのであれば移動

playermove
{
	if (input)
	{
		playerNextPos.x += 1;
	}

	if (input)
	{
		playerNextPos.y += 1;
	}
}

{
	// これは形状ごとに分けている
	list<shape*> playerGroup;
	list<shape*> enemyGroup;
	list<shape*> obstacleGroup;
	
	// プレイヤーと敵、障害物
	collision(playerGroup, enemyGroup);
	collision(playerGroup, obstacleGroup);

	// ↑の中で当たっていなければ???NextPosを???Posにする
	// 当たっていればスライドや動かないように処理をする
}


◇当たり判定を行う方法まとめ
最初に当たり判定を行うものを確定する
例
地形、障害物との当たり判定なら、プレイヤーから一定の範囲内にあるポリゴンを取得し
listに格納、障害物も範囲内のものをlistに格納して一つ一つ当たり判定を行っていく
プレイヤー、敵(味方)と自分以外のプレイヤー、敵(味方)、障害物、地形、敵弾
動くものプレイヤー、敵(味方)、自弾(敵弾)のlistと
それ以外プレイヤー、敵(味方)、障害物、地形

◇最終的な当たり判定の取り方

source		当たり判定元
destination	当たり判定先

距離を比較して一定の範囲内なら次に
		↓
どれ(objType)と当たり判定を取るかを見る
		↓
typeごとの処理をする

















